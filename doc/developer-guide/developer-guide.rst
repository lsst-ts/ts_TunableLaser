.. _Developer_Guide:

#########################################
TunableLaser Developer Guide
#########################################

The CSC is a standard salobj CSC.
The TunableLaser's communication with the hardware is written in Python using the PySerial library.
The laser is connected to a Raspberry Pi using an RS-232 to USB converter cable.
There is a UDev rule running on the computer that symlinks the serial port to ``/dev/laser`` for consistent access.

The modules are divided into ascii, component, csc and hardware.
The ascii module deals with the serial communication of the software.
The component provides abstraction for controlling the hardware.
The csc implements the CSC.
The hardware abstracts the hardware of the laser.

The laser is logically divided into hardware modules that each report and control a different aspect of the laser.
Each module has a register that it can read and write, not every register is writable.

.. _Dependencies:

Dependencies
============

* `SAL <https://ts-sal.lsst.io>`_ - v4.0.0
* `ts_salobj <https://ts-salobj.lsst.io>`_ - v5.x.0
* PySerial - 3.4.0

.. Linking to the previous versions may also be worthwhile, depending on the CSC

.. _API:

TunableLaser API
=============================

The content in this section is autogenerated from docstrings.

.. The code below should insert the docstrings from the code.

.. automodapi:: lsst.ts.tunablelaser
    :no-main-docstr:
    :no-inheritance-diagram:


.. _Build:

Build and Test
==============

Assuming that the ``develop-env`` docker container is running.

.. prompt:: bash

    cd develop/ts_TunableLaser
    setup -kr .
    scons

An alternative

.. prompt:: bash

    cd develop/ts_TunableLaser
    pip install -e .[dev]
    pre-commit install # install black hook
    pytest --cov lsst.ts.tunablelaser -ra


.. _Usage:

Usage
=====

The laser is connected via a RS-232 serial port.
The CSC is started using the following python script located in the ``bin`` directory.


.. prompt:: bash

    python runTunableLaserCSC.py

.. _Simulator:

Simulator
=========

There is a basic simulation mode included in the CSC.
Returns basic information to the CSC.


.. _Firmware:

Updating Firmware of the TunableLaser
==================================================

1. Ensure laser is powered on
2. Plug laser into network switch
3. Type ip address into browser
4. Click upload firmware button on web page
5. Follow prompted directions


.. _Documentation:

Building the Documentation
==========================

.. prompt:: bash

    package-docs clean && package-docs build

.. _Contributing:

Contributing
============

Code and documentation contributions utilize pull-requests on github.
Feature requests can be made by filing a Jira ticket with the `TunableLaser` label.
In all cases, reaching out to the :ref:`contacts for this CSC <ts_xml:index:master-csc-table:TunableLaser>` is recommended.

